/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controlador.Gestor;
import Modelo.CellRenderer;
import Modelo.HeaderCellRenderer;
import Modelo.Pedido;
import static Vistas.Main.panelEscritorio;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Prophet
 */
public class DetallePedido extends javax.swing.JInternalFrame {

    /**
     * Creates new form DetallePedido
     */
    Gestor g;
    ArrayList<Pedido> lista;
    int nroOrden;
    public DetallePedido() {
        initComponents();
        inicio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalir = new javax.swing.JButton();
        btnBuscarPedido = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblProveedor = new javax.swing.JLabel();
        lblFechaPedido = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblEstadoPedido = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        lblNroOrden = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnActualizarStock = new javax.swing.JButton();
        lblCodigoEstado = new javax.swing.JLabel();
        lblEstadoPedido2 = new javax.swing.JLabel();
        lblEstadoPedido3 = new javax.swing.JLabel();
        lblGeneradoPor = new javax.swing.JLabel();

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/icons8_Exit_32.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnBuscarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Search_48px.png"))); // NOI18N
        btnBuscarPedido.setText("Buscar");
        btnBuscarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPedidoActionPerformed(evt);
            }
        });

        jLabel1.setText("Proveedor:");

        jLabel2.setText("Fecha emisión:");

        jLabel3.setText("Listado");

        lblProveedor.setText("...");

        lblFechaPedido.setText("...");

        jLabel4.setText("Estado:");

        lblEstadoPedido.setText("...");

        jLabel5.setText("Observaciones:");

        txtObservaciones.setColumns(20);
        txtObservaciones.setForeground(new java.awt.Color(153, 153, 255));
        txtObservaciones.setRows(5);
        txtObservaciones.setEnabled(false);
        jScrollPane2.setViewportView(txtObservaciones);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("NRO DE ORDEN");

        lblNroOrden.setForeground(new java.awt.Color(0, 0, 204));
        lblNroOrden.setText("...");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        btnActualizarStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Move Stock_48px.png"))); // NOI18N
        btnActualizarStock.setText("Confirmar ingreso a stock");
        btnActualizarStock.setEnabled(false);
        btnActualizarStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarStockActionPerformed(evt);
            }
        });

        lblCodigoEstado.setForeground(new java.awt.Color(255, 0, 0));
        lblCodigoEstado.setText("...");

        lblEstadoPedido2.setText("Código:");

        lblEstadoPedido3.setText("Generado por:");

        lblGeneradoPor.setForeground(new java.awt.Color(0, 102, 0));
        lblGeneradoPor.setText("...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jLabel6)
                        .addGap(38, 38, 38)
                        .addComponent(lblNroOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnActualizarStock)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBuscarPedido)
                                .addGap(30, 30, 30)
                                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                    .addComponent(lblEstadoPedido2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEstadoPedido3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCodigoEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(lblEstadoPedido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblFechaPedido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE))
                                    .addComponent(lblGeneradoPor, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblNroOrden))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblProveedor))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblFechaPedido))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEstadoPedido)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEstadoPedido2)
                    .addComponent(lblCodigoEstado))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEstadoPedido3)
                    .addComponent(lblGeneradoPor))
                .addGap(18, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscarPedido)
                            .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnActualizarStock)))
                    .addComponent(jLabel3))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // salir de la ventana
        
         if (JOptionPane.showConfirmDialog(rootPane, "Va a salir de la revisión y verificación de ordenes de compra, ¿desea continuar?",
        "Abandonar", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
        {
            this.dispose();
        }
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnBuscarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPedidoActionPerformed
        try 
        {
            // Buscar el pedido por nro de orden.
          
                nroOrden = Integer.valueOf( JOptionPane.showInputDialog("INGRESE EL NRO DE ORDEN..."));
                lista = g.getDetallePedido(nroOrden);
            
                if(!lista.isEmpty())
                {
                        /*
                            Para evaluar el pedido ya que obtengo un listado, guardo
                            en una nueva instancia de pedido el primer elemento del ArrayList,
                            este contiene toda la información para evaluar cada orden, y los productos
                            asociados.
                        */
                        Pedido miPedido = lista.get(0);
                   
                        lblProveedor.setText(miPedido.getProveedor().toUpperCase());
                        lblEstadoPedido.setText(miPedido.getEstado().toUpperCase());
                        lblNroOrden.setText(String.valueOf(miPedido.getNroOrden()));
                        lblFechaPedido.setText(miPedido.getFecha());
                        txtObservaciones.setText(miPedido.getObservaciones());
                        lblCodigoEstado.setText(miPedido.getCodigoEstado());
                        lblGeneradoPor.setText(miPedido.getOperador());
                        cargarTabla(nroOrden);
                        /*
                        Pregunta si el pedido ha sido procesado
                        el código que lo especifica es la letra T, y esto sirve para no volver a 
                        procesar un pedido ya actualizado.
                        Si el pedido registra el código de estado T, se bloquea 
                        el control para operar.
                        Tambien se resalta la descripción  del estado 
                        con un color para cada caso
                        */
                        if(miPedido.getCodigoEstado().startsWith("T"))
                        {
                            btnActualizarStock.setEnabled(false);
                            lblEstadoPedido.setForeground(Color.GREEN);
                        }
                        else
                        {
                            btnActualizarStock.setEnabled(true);
                            lblEstadoPedido.setForeground(Color.RED);
                        }
                    
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "El pedido con el número de orden: " + nroOrden+" no se encuentra", "Información", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                    DetallePedido nuevo = new DetallePedido();
                    CentrarVentana(nuevo);  
                }
            
            
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un valor a buscar", "Información", JOptionPane.INFORMATION_MESSAGE); 
            
        } catch (SQLException ex) {
            Logger.getLogger(DetallePedido.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnBuscarPedidoActionPerformed

    private void btnActualizarStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarStockActionPerformed
        // Generar la actualizacion del stock, con los datos de la orden de compra
        
        
        try 
        {
            
            if (JOptionPane.showConfirmDialog(rootPane, "Se va a realizar la modificación en stock, ¿desea continuar?",
            "Actualizar Stock", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
            {
                String codigoEstado = "T";
                
                for (Pedido pedido : lista)
                {
                    g.actualizarStock(pedido);
                }
                
                g.actualizarEstadoPedido(nroOrden,codigoEstado);
                JOptionPane.showMessageDialog(null, "Actualización del stock se ha concrecato exitosamente!", "Información", JOptionPane.INFORMATION_MESSAGE); 
                this.dispose();
                DetallePedido nuevo = new DetallePedido();
                CentrarVentana(nuevo);  
            }
         
        } 
        catch (SQLException ex) {
                Logger.getLogger(DetallePedido.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_btnActualizarStockActionPerformed

    
      
    void CentrarVentana(JInternalFrame frame) {
        panelEscritorio.add(frame);
        Dimension dim = panelEscritorio.getSize();
        Dimension framesise = frame.getSize();
        frame.setLocation((dim.width - framesise.width) / 2, (dim.height - framesise.height) / 2);
        frame.show();
    }
    
    private void limpiar()
    {
        lblNroOrden.setText("...");
        lblEstadoPedido.setText("...");
        lblFechaPedido.setText("...");
        lblProveedor.setText("...");
        txtObservaciones.setText("");
        this.dispose();
    }
    
    

    private void cargarTabla(int nroOrden) {

        try {

            DefaultTableModel modelo = new DefaultTableModel();
            lista = g.getDetallePedido(nroOrden);
            modelo.setColumnIdentifiers(new String[]{"Código","Descripción producto","Cantidad"});
            for (Pedido p : lista) {
                Vector v = new Vector();
                v.add(p.getCodigo());
                v.add(p.getProducto());
                v.add(p.getCantidad());        
                modelo.addRow(v);
            }

            jTable1.setModel(modelo);
            //color de los bordes de las celdas
            jTable1.setGridColor(new java.awt.Color(214, 213, 208));
            //tamaño de columnas
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(420);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(150);
          
           
            //altura de filas
            jTable1.setRowHeight(24);
            //se asigna el nuevo CellRenderer a cada columna segun su contenido
            jTable1.getColumnModel().getColumn(1).setCellRenderer(new CellRenderer("text"));
            jTable1.getColumnModel().getColumn(0).setCellRenderer(new CellRenderer("minimo"));
            jTable1.getColumnModel().getColumn(2).setCellRenderer(new CellRenderer("num"));
            //Se asigna nuevo header a la tabla
            JTableHeader jtableHeader = jTable1.getTableHeader();
            jtableHeader.setDefaultRenderer(new HeaderCellRenderer());
            jTable1.setTableHeader(jtableHeader);
            filasNoEditables(jTable1);
            
        } catch (Exception e) {

        }
    }
    
    
    private void filasNoEditables(JTable tabla)
    {
         for (int c = 0; c < tabla.getColumnCount(); c++)
            {
                Class<?> col_class = tabla.getColumnClass(c);
                tabla.setDefaultEditor(col_class, null);        // remover editor
            }
    }
    
    private void inicio()
    {
        this.setTitle("Verificar orden de pedido");
        g = new Gestor();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarStock;
    private javax.swing.JButton btnBuscarPedido;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCodigoEstado;
    private javax.swing.JLabel lblEstadoPedido;
    private javax.swing.JLabel lblEstadoPedido2;
    private javax.swing.JLabel lblEstadoPedido3;
    private javax.swing.JLabel lblFechaPedido;
    private javax.swing.JLabel lblGeneradoPor;
    private javax.swing.JLabel lblNroOrden;
    private javax.swing.JLabel lblProveedor;
    private javax.swing.JTextArea txtObservaciones;
    // End of variables declaration//GEN-END:variables
}
