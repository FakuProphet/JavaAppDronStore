/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controlador.Gestor;
import Dto.CarritoDTO;
import Modelo.CellRenderer;
import Modelo.Cliente;
import Modelo.FormaPago;
import Modelo.HeaderCellRenderer;
import Modelo.Producto;
import static Vistas.Main.panelEscritorio;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Point;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Prophet
 */
public class Presupuesto extends javax.swing.JInternalFrame {

    Gestor gestor;
    ArrayList<Producto> lProductos;
    private TableRowSorter trsfiltro;
    String filtro;
    private ArrayList<CarritoDTO> carrito;
    private CarritoDTO pr;
    Cliente c;
    private ArrayList<FormaPago> lFormasPago;
    private FormaPago formaPago;
    public Presupuesto() {
        initComponents();
        gestor = new Gestor();
        
        lFormasPago = new ArrayList<>();
        lFormasPago= gestor.getListadoFormasDePago();
        cargarTabla();
        cargarCombo(lFormasPago, cboFormasPago);
        formaPago = (FormaPago) cboFormasPago.getSelectedItem();
        eliminarSeleccionTabla();
        seleccionProductos();
        txtFiltro.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                String cadena = (txtFiltro.getText().toUpperCase());
                txtFiltro.setText(cadena);
                repaint();
                filtro();
            }
        });
        cargarTablaDetalle(carrito);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtNroDni = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnNuevoCliente = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        cboFormasPago = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaListadoProductos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaDetallePresupuesto = new javax.swing.JTable();
        txtFiltro = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblSubtotal = new javax.swing.JLabel();
        lblDescuento = new javax.swing.JLabel();
        lblIvaDiscriminado = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblMontoTotal = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblNombreCliente = new javax.swing.JLabel();
        lblNroDni = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        btnGenerarPresupuesto = new javax.swing.JButton();
        btnPresupuestoPDF = new javax.swing.JButton();

        setClosable(true);
        setTitle("Generar y emitir presupuesto");
        setPreferredSize(new java.awt.Dimension(1100, 600));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Accounting_48px.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 0));
        jLabel2.setText("PRESUPUESTO");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setForeground(new java.awt.Color(255, 153, 153));
        jLabel3.setText("Buscar cliente por dni:");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Search_48px.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnNuevoCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/ico_Add_New_32.png"))); // NOI18N
        btnNuevoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoClienteActionPerformed(evt);
            }
        });

        jLabel12.setForeground(new java.awt.Color(255, 153, 153));
        jLabel12.setText("Formas de pago");

        cboFormasPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboFormasPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFormasPagoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboFormasPago, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNroDni, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNuevoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNroDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(cboFormasPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNuevoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setForeground(new java.awt.Color(102, 102, 255));

        tablaListadoProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaListadoProductos);

        tablaDetallePresupuesto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaDetallePresupuesto.setToolTipText("Para eliminar un elemento hacer doble click");
        jScrollPane2.setViewportView(tablaDetallePresupuesto);

        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroKeyTyped(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 153, 153));
        jLabel7.setText("Filtrado:");

        jLabel8.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 51));
        jLabel8.setText("SUBTOTAL:");

        jLabel9.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 51, 51));
        jLabel9.setText("DESCUENTO:");

        lblSubtotal.setForeground(new java.awt.Color(255, 51, 51));
        lblSubtotal.setText("...");

        lblDescuento.setForeground(new java.awt.Color(255, 51, 51));
        lblDescuento.setText("...");

        lblIvaDiscriminado.setForeground(new java.awt.Color(255, 51, 51));
        lblIvaDiscriminado.setText("...");

        jLabel10.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 51, 51));
        jLabel10.setText("IVA 21%");

        jLabel11.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 255));
        jLabel11.setText("MONTO TOTAL:");

        lblMontoTotal.setForeground(new java.awt.Color(0, 0, 204));
        lblMontoTotal.setText("...");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDescuento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lblSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(40, 40, 40)
                                        .addComponent(lblIvaDiscriminado, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(28, 28, 28)
                                        .addComponent(lblMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(61, 61, 61))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGap(0, 22, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblSubtotal)
                    .addComponent(jLabel10)
                    .addComponent(lblIvaDiscriminado))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescuento)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(lblMontoTotal))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Datos del cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(102, 102, 255))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(102, 102, 255));

        jLabel4.setForeground(new java.awt.Color(255, 102, 102));
        jLabel4.setText("Nombre completo: ");

        jLabel5.setForeground(new java.awt.Color(255, 102, 102));
        jLabel5.setText("Nro Documento:");

        lblNombreCliente.setText("...");

        lblNroDni.setText("...");

        jLabel6.setForeground(new java.awt.Color(255, 102, 102));
        jLabel6.setText("Email:");

        lblEmail.setText("...");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblNombreCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblNroDni, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblNombreCliente))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblNroDni))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblEmail))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        btnGenerarPresupuesto.setText("Generar ");
        btnGenerarPresupuesto.setEnabled(false);
        btnGenerarPresupuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarPresupuestoActionPerformed(evt);
            }
        });

        btnPresupuestoPDF.setText("Emitir PDF");
        btnPresupuestoPDF.setEnabled(false);
        btnPresupuestoPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPresupuestoPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPresupuestoPDF)
                        .addGap(58, 58, 58)
                        .addComponent(btnGenerarPresupuesto))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(19, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPresupuestoPDF)
                    .addComponent(btnGenerarPresupuesto))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void filtro() 
    {
        filtro = txtFiltro.getText();
        trsfiltro.setRowFilter(RowFilter.regexFilter(txtFiltro.getText(), 1));
    }
    
    private void btnNuevoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoClienteActionPerformed
        // Abrir ABM clientes
        MantenimientoClientes nuevo = new MantenimientoClientes();
        CentrarVentana(nuevo);
    }//GEN-LAST:event_btnNuevoClienteActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // Buscar cliente
        
        int dni=Integer.parseInt(txtNroDni.getValue().toString());
           
            try
            { 
                c = gestor.obtenerCliente(dni);
                
                if(c == null)
                {
                    JOptionPane.showMessageDialog(null, "El cliente dni nro: " +dni+ " no se encuentra en nuestros registros");
                    limpiarCampos();
                    btnGenerarPresupuesto.setEnabled(false);
                    btnPresupuestoPDF.setEnabled(false);
                }
                else
                {
                    lblEmail.setText(c.getEmail());
                    lblNombreCliente.setText(c.getApellido().toUpperCase()+" "+c.getNombre());
                    lblNroDni.setText(String.valueOf(c.getClienteDni()));
                    btnGenerarPresupuesto.setEnabled(true);
                    btnPresupuestoPDF.setEnabled(true);
                }
            }
            catch(Exception e)
            {
                
            }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGenerarPresupuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarPresupuestoActionPerformed
        
        //generar registrar y emitir presupuesto
        
       try 
       {
           // Se procede a generar el presupuesto , y su registro en bbdd.
           if (JOptionPane.showConfirmDialog(rootPane, "Se va a registrar y emitir el presupuesto, ¿desea continuar?",
            "Comfirmación generación presupuesto", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
           {
                String mensaje = gestor.encabezadoPresupuesto(c);
                
                for (CarritoDTO p : carrito) 
                {
                    gestor.detallePresupuesto(p);
                }
              
                
                JOptionPane.showMessageDialog(this,mensaje,"Presupuesto",JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                Presupuesto nuevo = new Presupuesto();
                CentrarVentana(nuevo);
           }
       } 
       catch (Exception ex) 
       {
           JOptionPane.showMessageDialog(this, ex.toString(),"Error",JOptionPane.INFORMATION_MESSAGE);
       }
        
        
    }//GEN-LAST:event_btnGenerarPresupuestoActionPerformed

    private void txtFiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyTyped
        // filtro
        
        trsfiltro = new TableRowSorter(tablaListadoProductos.getModel());
        tablaListadoProductos.setRowSorter(trsfiltro);
    }//GEN-LAST:event_txtFiltroKeyTyped

    
    private void btnPresupuestoPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPresupuestoPDFActionPerformed
        // Abre interfaz para generar pdf
        PresupuestoPDF nuevo = new PresupuestoPDF(carrito,c,formaPago);
        CentrarVentana(nuevo);
    }//GEN-LAST:event_btnPresupuestoPDFActionPerformed

    private void cboFormasPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFormasPagoActionPerformed
        formaPago = (FormaPago) cboFormasPago.getSelectedItem();
    }//GEN-LAST:event_cboFormasPagoActionPerformed

    private void filasNoEditables(JTable tabla)
    {
         for (int c = 0; c < tabla.getColumnCount(); c++)
            {
                Class<?> col_class = tabla.getColumnClass(c);
                tabla.setDefaultEditor(col_class, null);        // remover editor
            }
    }
    
    
    
    private void cargarCombo(ArrayList lista, JComboBox combo)
    {
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        
        for (Object o : lista) 
        {
            FormaPago f = (FormaPago)o;
            if(f.getDescripcion().contains("Tarjeta") || f.getDescripcion().contains("Efectivo"))
            modelo.addElement(o);
        }
        
        combo.setModel(modelo);
    }
    
    
    
    void limpiarCampos()
    {
        lblEmail.setText("...");
        lblNombreCliente.setText("...");
        lblNroDni.setText("...");
    }
    
    
    void CentrarVentana(JInternalFrame frame) {
        panelEscritorio.add(frame);
        Dimension dim = panelEscritorio.getSize();
        Dimension framesise = frame.getSize();
        frame.setLocation((dim.width - framesise.width) / 2, (dim.height - framesise.height) / 2);
        frame.show();
    }
    
    
    
    void cargarTabla()
    {
         
            DefaultTableModel modelo = new DefaultTableModel();
            lProductos = gestor.getListadoProductosSimple();
            modelo.setColumnIdentifiers(new String[]{"Cod producto","Descripción producto","Precio unitario"});
            for (Producto p : lProductos ) {
                if(p.getPrecioUnitario()>0)
                {
                    Vector v = new Vector();
                    v.add(p.getCodigo());
                    v.add(p.getDescripcion().toUpperCase());
                    v.add(p.getPrecioUnitario());
                    modelo.addRow(v);
                }
            }
            tablaListadoProductos.setModel(modelo);
            filasNoEditables(tablaListadoProductos);
           // filasNoEditables(tablaDetallePresupuesto);
    }
    
    private void eliminarSeleccionTabla()
    {
        tablaDetallePresupuesto.addMouseListener(new MouseAdapter() {
        @Override
        public void mousePressed(MouseEvent Mouse_evt) {
        JTable table =(JTable) Mouse_evt.getSource();
        Point point = Mouse_evt.getPoint();
        int row = table.rowAtPoint(point);
        if (Mouse_evt.getClickCount() == 2) 
        {
            if(tablaDetallePresupuesto.getRowCount()>0)
            {   
           
                if (JOptionPane.showConfirmDialog(rootPane, "Va a eliminar la selección, ¿desea continuar?",
                "Eliminar", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
                {
                    removeSelectedRows(tablaDetallePresupuesto);
                    TotalizarPresupuesto();
                }
            
            }
        }
        
        
        }
        });
    }
    
    
     public void removeSelectedRows(JTable table)
    {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int[] rows = table.getSelectedRows();
        
            for(int i=0;i<rows.length;i++)
            {
                model.removeRow(rows[i]-i);    
                carrito.remove(rows[i]);
            }
       
        
    }
    
    private void seleccionProductos()
    {
        carrito = new ArrayList<>();
        tablaListadoProductos.addMouseListener(new MouseAdapter() {
        @Override
        public void mousePressed(MouseEvent Mouse_evt) {
        JTable table =(JTable) Mouse_evt.getSource();
        Point point = Mouse_evt.getPoint();
        int row = table.rowAtPoint(point);
        if (Mouse_evt.getClickCount() == 2) 
        {
              
           try 
           {   
                pr = new CarritoDTO();
                pr.setCodigoProducto(Integer.valueOf(tablaListadoProductos.getValueAt(tablaListadoProductos.getSelectedRow(), 0).toString()));
                pr.setDescripcionProducto(tablaListadoProductos.getValueAt(tablaListadoProductos.getSelectedRow(), 1).toString());
                pr.setCosto(Double.valueOf(tablaListadoProductos.getValueAt(tablaListadoProductos.getSelectedRow(), 2).toString()));
                pr.setCantidad(Integer.valueOf(JOptionPane.showInputDialog("INGRESE LA CANTIDAD...")));
                
                
                if(validarDatosTabla(pr.getDescripcionProducto()))
                {
                    carrito.add(pr);     
                    cargarTablaDetalle(carrito); 
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "El producto ya se encuentra cargado", "Información", JOptionPane.INFORMATION_MESSAGE);
                }
           } 
           catch (HeadlessException | NumberFormatException e) 
           {
                JOptionPane.showMessageDialog(null, "Debe ingresar un valor numérico", "Información", JOptionPane.INFORMATION_MESSAGE);            
           }
            
        }
        
        
        }
        });
    }
    
    private boolean validarDatosTabla(String miProducto)
    {
        boolean bandera = true;
        if(tablaDetallePresupuesto.getRowCount()>0)
        {
            for (int i = 0; i < tablaDetallePresupuesto.getRowCount(); i++) 
            {
                //el cero indica la columna la cual se evalua
                //en este caso es el codigo del producto
                if(tablaDetallePresupuesto.getValueAt(i, 0)!=null)
                {
                    String producto =  (tablaDetallePresupuesto.getValueAt(i, 0).toString());
                    if(producto.equals(miProducto))
                    {
                        bandera = false;
                    }
                }
            }
        }
        
        return bandera;
    }
    
    
    private void cargarTablaDetalle(ArrayList<CarritoDTO> lista) {

        try {

            DefaultTableModel modelo = new DefaultTableModel();
            modelo.setColumnIdentifiers(new String[]{"Descripción","Cantidad","Precio"});
            
            for (CarritoDTO o : lista) 
            {
               Vector v = new Vector();
               v.add(o.getDescripcionProducto());
               v.add(o.getCantidad());
               v.add(o.getCosto());
               
               modelo.addRow(v);
            }

            tablaDetallePresupuesto.setModel(modelo);
            TotalizarPresupuesto();
            //color de los bordes de las celdas
            tablaDetallePresupuesto.setGridColor(new java.awt.Color(214, 213, 208));
            //tamaño de columnas
            tablaDetallePresupuesto.getColumnModel().getColumn(0).setPreferredWidth(250);
            tablaDetallePresupuesto.getColumnModel().getColumn(1).setPreferredWidth(70);
            tablaDetallePresupuesto.getColumnModel().getColumn(2).setPreferredWidth(70);
            //altura de filas
            tablaDetallePresupuesto.setRowHeight(24);
            //se asigna el nuevo CellRenderer a cada columna segun su contenido
            tablaDetallePresupuesto.getColumnModel().getColumn(0).setCellRenderer(new CellRenderer("text"));
            tablaDetallePresupuesto.getColumnModel().getColumn(1).setCellRenderer(new CellRenderer("num"));
            tablaDetallePresupuesto.getColumnModel().getColumn(2).setCellRenderer(new CellRenderer("num"));
            //Se asigna nuevo header a la tabla
            JTableHeader jtableHeader = tablaDetallePresupuesto.getTableHeader();
            jtableHeader.setDefaultRenderer(new HeaderCellRenderer());
            tablaDetallePresupuesto.setTableHeader(jtableHeader);
            filasNoEditables(tablaDetallePresupuesto);
            
        } catch (Exception e) {

        }
    }
    
    
    
    private void TotalizarPresupuesto()
    {
        double SubTotal = 0.0;
        double IvaDiscriminado=0.0;
        double total =0.0;
        double totalConDescuento=0.0;
        int cantidad = 0;
        int cantidadAcumulada=0;
        double costo=0.0;
        int iva = 21;
        if(tablaDetallePresupuesto.getRowCount()>=0)
        {
            //descripcion, cantidad, precio. Orden en tabla
            for (int i = 0; i < tablaDetallePresupuesto.getRowCount(); i++) 
            {
                cantidad = Integer.valueOf(tablaDetallePresupuesto.getValueAt(i, 1).toString());
                cantidadAcumulada+=cantidad;
                costo = Double.valueOf(tablaDetallePresupuesto.getValueAt(i, 2).toString());
                
                SubTotal+=cantidad*costo;
                IvaDiscriminado = (SubTotal * iva ) /100;
                total = SubTotal + IvaDiscriminado;
                
                if(cantidadAcumulada>=10)
                {
                    totalConDescuento=total * 10 /100;
                }
            }
            DecimalFormat f = new DecimalFormat("###,###.##");
            lblSubtotal.setText("$"+String.valueOf(f.format(SubTotal)));
            lblIvaDiscriminado.setText("$"+String.valueOf(f.format(IvaDiscriminado)));
            lblMontoTotal.setText("$"+String.valueOf(f.format(total)));
            lblDescuento.setText("$"+String.valueOf(f.format(totalConDescuento)));
            
        }
        else
        {
            //Sin Acciones
            
        }
        
       
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGenerarPresupuesto;
    private javax.swing.JButton btnNuevoCliente;
    private javax.swing.JButton btnPresupuestoPDF;
    private javax.swing.JComboBox<String> cboFormasPago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDescuento;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblIvaDiscriminado;
    private javax.swing.JLabel lblMontoTotal;
    private javax.swing.JLabel lblNombreCliente;
    private javax.swing.JLabel lblNroDni;
    private javax.swing.JLabel lblSubtotal;
    private javax.swing.JTable tablaDetallePresupuesto;
    private javax.swing.JTable tablaListadoProductos;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JSpinner txtNroDni;
    // End of variables declaration//GEN-END:variables
}
